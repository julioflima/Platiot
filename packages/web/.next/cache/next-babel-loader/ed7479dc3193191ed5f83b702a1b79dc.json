{"ast":null,"code":"var _jsxFileName = \"/home/juloko/brother.bet/packages/web/src/pages/[lang]/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { getLocalizationProps, LanguageProvider } from '../../context/LanguageContext';\nimport { Landing } from '../../layouts/pages/Landing';\nimport { Navigation } from '../../layouts/components//Navigation';\n\nconst IndexPage = ({\n  localization\n}) => __jsx(LanguageProvider, {\n  localization: localization,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, __jsx(Landing, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}), __jsx(Navigation, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}));\n\nexport const getStaticProps = async ctx => {\n  const localization = getLocalizationProps(ctx, 'landing');\n  return {\n    props: {\n      localization\n    }\n  };\n};\nexport const getStaticPaths = async () => {\n  return {\n    paths: ['en', 'pt'].map(lang => ({\n      params: {\n        lang\n      }\n    })),\n    fallback: false\n  };\n};\nexport default IndexPage;","map":{"version":3,"sources":["/home/juloko/brother.bet/packages/web/src/pages/[lang]/index.tsx"],"names":["getLocalizationProps","LanguageProvider","Landing","Navigation","IndexPage","localization","getStaticProps","ctx","props","getStaticPaths","paths","map","lang","params","fallback"],"mappings":";;;AACA,SAASA,oBAAT,EAA+BC,gBAA/B,QAAuD,+BAAvD;AAEA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,UAAT,QAA2B,sCAA3B;;AAEA,MAAMC,SAEJ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACH,MAAC,gBAAD;AAAkB,EAAA,YAAY,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CAHF;;AASA,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AAC3D,QAAMF,YAAY,GAAGL,oBAAoB,CAACO,GAAD,EAAM,SAAN,CAAzC;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLH,MAAAA;AADK;AADF,GAAP;AAKD,CAPM;AASP,OAAO,MAAMI,cAA8B,GAAG,YAAY;AACxD,SAAO;AACLC,IAAAA,KAAK,EAAE,CAAC,IAAD,EAAO,IAAP,EAAaC,GAAb,CAAkBC,IAAD,KAAW;AAAEC,MAAAA,MAAM,EAAE;AAAED,QAAAA;AAAF;AAAV,KAAX,CAAjB,CADF;AAELE,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CALM;AAOP,eAAeV,SAAf","sourcesContent":["import { GetStaticPaths, GetStaticProps, NextPage } from 'next'\nimport { getLocalizationProps, LanguageProvider } from '../../context/LanguageContext'\nimport { Localization } from '../../translations/types'\nimport { Landing } from '../../layouts/pages/Landing'\nimport { Navigation } from '../../layouts/components//Navigation'\n\nconst IndexPage: NextPage<{\n  localization: Localization\n}> = ({ localization }) => (\n  <LanguageProvider localization={localization}>\n    <Landing />\n    <Navigation />\n  </LanguageProvider>\n)\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const localization = getLocalizationProps(ctx, 'landing')\n  return {\n    props: {\n      localization,\n    },\n  }\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  return {\n    paths: ['en', 'pt'].map((lang) => ({ params: { lang } })),\n    fallback: false,\n  }\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}