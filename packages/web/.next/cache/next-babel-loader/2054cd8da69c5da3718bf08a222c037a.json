{"ast":null,"code":"// ..src/hooks/useTranslation.ts\nimport { useContext } from 'react';\nimport { LanguageContext } from '../context/LanguageContext';\nexport default function useTranslation() {\n  const {\n    localization\n  } = useContext(LanguageContext);\n\n  function t(key) {\n    if (!localization.translations[key]) {\n      console.warn(`Translation '${key}' for locale '${localization.locale}' not found.`);\n    }\n\n    return localization.translations[key] || '';\n  }\n\n  function translate(key) {\n    if (!localization.translations[key]) {\n      console.warn(`Translation '${key}' for locale '${localization.locale}' not found.`);\n    }\n\n    const about = JSON.stringify(t('about'));\n    const test = JSON.parse(about);\n    return localization.translations[key] || '';\n  }\n\n  return {\n    t,\n    translate,\n    locale: localization.locale\n  };\n}","map":{"version":3,"sources":["/home/juloko/brother.bet/packages/web/src/hooks/useTranslation.ts"],"names":["useContext","LanguageContext","useTranslation","localization","t","key","translations","console","warn","locale","translate","about","JSON","stringify","test","parse"],"mappings":"AAAA;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,eAAT,QAAgC,4BAAhC;AAEA,eAAe,SAASC,cAAT,GAA0B;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAmBH,UAAU,CAACC,eAAD,CAAnC;;AAEA,WAASG,CAAT,CAAWC,GAAX,EAAwB;AACtB,QAAI,CAACF,YAAY,CAACG,YAAb,CAA0BD,GAA1B,CAAL,EAAqC;AACnCE,MAAAA,OAAO,CAACC,IAAR,CAAc,gBAAeH,GAAI,iBAAgBF,YAAY,CAACM,MAAO,cAArE;AACD;;AACD,WAAON,YAAY,CAACG,YAAb,CAA0BD,GAA1B,KAAkC,EAAzC;AACD;;AAED,WAASK,SAAT,CAAmBL,GAAnB,EAAgC;AAC9B,QAAI,CAACF,YAAY,CAACG,YAAb,CAA0BD,GAA1B,CAAL,EAAqC;AACnCE,MAAAA,OAAO,CAACC,IAAR,CAAc,gBAAeH,GAAI,iBAAgBF,YAAY,CAACM,MAAO,cAArE;AACD;;AAED,UAAME,KAAK,GAAGC,IAAI,CAACC,SAAL,CAAeT,CAAC,CAAC,OAAD,CAAhB,CAAd;AACA,UAAMU,IAAI,GAAGF,IAAI,CAACG,KAAL,CAAWJ,KAAX,CAAb;AAEA,WAAOR,YAAY,CAACG,YAAb,CAA0BD,GAA1B,KAAkC,EAAzC;AACD;;AAED,SAAO;AACLD,IAAAA,CADK;AAELM,IAAAA,SAFK;AAGLD,IAAAA,MAAM,EAAEN,YAAY,CAACM;AAHhB,GAAP;AAKD","sourcesContent":["// ..src/hooks/useTranslation.ts\nimport { useContext } from 'react'\nimport { LanguageContext } from '../context/LanguageContext'\n\nexport default function useTranslation() {\n  const { localization } = useContext(LanguageContext)\n\n  function t(key: string) {\n    if (!localization.translations[key]) {\n      console.warn(`Translation '${key}' for locale '${localization.locale}' not found.`)\n    }\n    return localization.translations[key] || ''\n  }\n\n  function translate(key: string) {\n    if (!localization.translations[key]) {\n      console.warn(`Translation '${key}' for locale '${localization.locale}' not found.`)\n    }\n\n    const about = JSON.stringify(t('about'))\n    const test = JSON.parse(about)\n\n    return localization.translations[key] || ''\n  }\n\n  return {\n    t,\n    translate,\n    locale: localization.locale,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}