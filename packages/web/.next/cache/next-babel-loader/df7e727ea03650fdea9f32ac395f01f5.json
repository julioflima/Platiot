{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/juloko/brother.bet/packages/web/src/pages/[lang]/index.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { LanguageProvider } from '../../context/LanguageContext';\nimport { Landing } from '../../layouts/Landing';\nimport { Navigation } from '../../components/Navigation';\n\nvar IndexPage = function IndexPage(_ref) {\n  var localization = _ref.localization;\n  return __jsx(LanguageProvider, {\n    localization: localization,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }\n  }, __jsx(Landing, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }), __jsx(Navigation, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }));\n};\n\n_c = IndexPage;\nexport var __N_SSG = true;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/home/juloko/brother.bet/packages/web/src/pages/[lang]/index.tsx"],"names":["LanguageProvider","Landing","Navigation","IndexPage","localization"],"mappings":";;;;;AACA,SAA+BA,gBAA/B,QAAuD,+BAAvD;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;;AAEA,IAAMC,SAEJ,GAAG,SAFCA,SAED;AAAA,MAAGC,YAAH,QAAGA,YAAH;AAAA,SACH,MAAC,gBAAD;AAAkB,IAAA,YAAY,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADG;AAAA,CAFL;;KAAMD,S;;AAyBN,eAAeA,SAAf","sourcesContent":["import { GetStaticPaths, GetStaticProps, NextPage } from 'next'\nimport { getLocalizationProps, LanguageProvider } from '../../context/LanguageContext'\nimport { Localization } from '../../translations/types'\nimport { Landing } from '../../layouts/Landing'\nimport { Navigation } from '../../components/Navigation'\n\nconst IndexPage: NextPage<{\n  localization: Localization\n}> = ({ localization }) => (\n  <LanguageProvider localization={localization}>\n    <Landing />\n    <Navigation />\n  </LanguageProvider>\n)\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const localization = getLocalizationProps(ctx, 'landing')\n  return {\n    props: {\n      localization,\n    },\n  }\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  return {\n    paths: ['en', 'pt'].map((lang) => ({ params: { lang } })),\n    fallback: false,\n  }\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}